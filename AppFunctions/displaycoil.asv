function [ ] = displaycoil(app)
%%  The function called to display the coil

%% Define coil movement using:
% (i) new rotational angle about an axis (theta);
% (ii) new direction of its axis (Nx, Ny, Nz) and;
% (iii) a new position to move to (MoveX MoveY MoveZ)


%Sets up strcoil0
load ('coil.mat', 'strcoil');
strcoil0    = strcoil;

%Sets up Coil0
Coil        = load('coilCAD.mat');
Coil0       = Coil;
disp(Coil0)
%%  Activates if the user has selected the Matrix Controls option using the switch

    %Creates the user-inputted transformation matrix
    transMatrix = [app.MatrixField11.Value, app.MatrixField12.Value, app.MatrixField13.Value, app.MatrixField14.Value;
                   app.MatrixField21.Value, app.MatrixField22.Value, app.MatrixField23.Value, app.MatrixField24.Value;
                   app.MatrixField31.Value, app.MatrixField32.Value, app.MatrixField33.Value, app.MatrixField34.Value;
                   app.MatrixField41.Value, app.MatrixField42.Value, app.MatrixField43.Value, app.MatrixField44.Value];
    
    
%%  Rework all of this both in code and in the UI

    theta   = app.ThetaSlider.Value;                       %    in radians
    Nx      = app.NxSlider.Value;
    Ny      = app.NySlider.Value;
    Nz      = app.NzSlider.Value;
    MoveX   = app.XTranslationSlider.Value;
    MoveY   = app.YTranslationSlider.Value;
    MoveZ   = app.ZTranslationSlider.Value;

    %if (Nx & Ny)


    [strcoil, Coil, handle] = positioncoil(strcoil0, Coil0, theta, Nx, Ny, Nz, MoveX, MoveY, MoveZ);
    bemf1_graphics_coil_CAD(app, Coil.P, Coil.t, 1);

%bemf1_graphics_coil_CAD(app, Coil.P, Coil.t, 1);
end